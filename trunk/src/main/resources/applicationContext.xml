<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <context:annotation-config/>
    <aop:aspectj-autoproxy/>

    <job id="job1" xmlns="http://www.springframework.org/schema/batch">
        <step id="step1" parent="simpleStep">
            <tasklet task-executor="taskExecutor"
                     throttle-limit="100000">  <!-- actual limit defined in taskExecutor bean-->
                <chunk reader="reader" processor="processor" writer="writer" retry-limit="5" skip-limit="1000000">
                    <skippable-exception-classes>
                        <include class="com.googlecode.scheme2ddl.exception.CannotGetDDLException"/>
                    </skippable-exception-classes>
                    <retryable-exception-classes>
                        <include class="org.springframework.jdbc.CannotGetJdbcConnectionException"/>
                    </retryable-exception-classes>
                </chunk>
            </tasklet>
        </step>
    </job>

    <bean id="simpleStep"
          class="org.springframework.batch.core.step.item.SimpleStepFactoryBean"
          abstract="true">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="jobRepository" ref="jobRepository"/>
        <property name="startLimit" value="100"/>
        <property name="commitInterval" value="1"/>
    </bean>

    <bean id="userObjectDao" class="com.googlecode.scheme2ddl.dao.UserObjectDaoImpl" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="transformParams" ref="transformParams_for_dbms_metadata"/>
    </bean>

    <bean id="connectionDao" class="com.googlecode.scheme2ddl.dao.ConnectionDaoImpl">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="processor" class="com.googlecode.scheme2ddl.UserObjectProcessor" autowire="autodetect">
        <property name="userObjectDao" ref="userObjectDao"/>
        <property name="ddlFormatter" ref="ddlFormatter"/>
        <property name="excludes" ref="excludes"/>
        <property name="dependencies" ref="dependencies"/>
        <property name="stopOnWarning" value="false"/>
    </bean>


    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository"/>
    </bean>

    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.SimpleJobRepository">
        <constructor-arg>
            <bean class="org.springframework.batch.core.repository.dao.MapJobInstanceDao"/>
        </constructor-arg>
        <constructor-arg>
            <bean class="org.springframework.batch.core.repository.dao.MapJobExecutionDao"/>
        </constructor-arg>
        <constructor-arg>
            <bean class="org.springframework.batch.core.repository.dao.MapStepExecutionDao"/>
        </constructor-arg>
        <constructor-arg>
            <bean class="org.springframework.batch.core.repository.dao.MapExecutionContextDao"/>
        </constructor-arg>
    </bean>

    <bean id="transactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager"/>

    <bean id="statAspect" class="com.googlecode.scheme2ddl.aspect.StatAspect"/>

</beans>
